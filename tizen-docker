FROM nugulinux/devenv:bionic

LABEL maintainer="fremontclement21@gmail.com" \
      version="0.1" \
      description="NUGUSDK for Tizen development environment"

ENV DEBIAN_FRONTEND=noninteractive \
    USER=work \
    LC_ALL=en_US.UTF-8 \
    LANG=$LC_ALL

RUN apt-get update && apt-get install -y \
        ca-certificates-java \
        openjdk-8-jdk \
        pciutils \
        rpm2cpio \
        sudo \
        zip \
        libwebkitgtk-1.0-0 \
        acl \
        libsdl1.2debian \
        cpio \
        bridge-utils \
        openvpn \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# User
RUN useradd -ms /bin/bash $USER \
	&& echo "$USER ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER \
	&& chmod 0440 /etc/sudoers.d/$USER \
	&& echo 'Defaults env_keep="http_proxy https_proxy ftp_proxy no_proxy"' >> /etc/sudoers \
	&& adduser $USER dialout

USER $USER
ENV HOME=/home/$USER \
    JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
ENV PATH=$JAVA_HOME/bin:$PATH
WORKDIR /home/$USER

# Tizen Studio CLI tool
RUN wget http://download.tizen.org/sdk/Installer/tizen-studio_3.6/web-cli_Tizen_Studio_3.6_ubuntu-64.bin \
    && chmod 755 web-cli_Tizen_Studio_3.6_ubuntu-64.bin \
    && yes | ./web-cli_Tizen_Studio_3.6_ubuntu-64.bin --accept-license \
    && rm web-cli_Tizen_Studio_3.6_ubuntu-64.bin

# Add tizen cli path
ENV PATH=/home/$USER/tizen-studio/tools/ide/bin:$PATH

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license MOBILE-4.0-NativeAppDevelopment-CLI

ENV EMULATOR_TOOLCHAIN=/home/work/tizen-studio/tools/i586-linux-gnueabi-gcc-6.2 \
    EMULATOR_SYSROOT=/home/work/tizen-studio/platforms/tizen-4.0/mobile/rootstraps/mobile-4.0-emulator.core \
    EMULATOR_TRIPLE=i586-linux-gnueabi \
    EMULATOR_ARCH=i386 \
    DEVICE_TOOLCHAIN=/home/work/tizen-studio/tools/arm-linux-gnueabi-gcc-6.2 \
    DEVICE_SYSROOT=/home/work/tizen-studio/platforms/tizen-4.0/mobile/rootstraps/mobile-4.0-device.core \
    DEVICE_TRIPLE=arm-linux-gnueabi \
    DEVICE_ARCH=armel

RUN sudo chmod 755 /root

# Workaround to fix permission error for default sysroot in i586-linux-gnueabi-gcc-6.2
#  $ i586-linux-gnueabi-gcc -print-sysroot
#  /root/.dibs/srib-dibs-builder-s32-u64/workspace/jobs/14087/buildRoot/rs-devel_glibc-2.24.i686
RUN sudo chmod 755 /root

# Workaround to fix curl build will recognize the TIZEN ca-cert path
# Copy the ca-certificates.crt to TIZEN ca-cert path with rename(remove ~s)
RUN sudo mkdir -p /opt/share/cert-svc \
    && sudo cp /etc/ssl/certs/ca-certificates.crt /opt/share/cert-svc/ca-certificate.crt

# Remove 'Requires.private' and 'Libs.private' in the glib-2.0.pc
RUN sed -i '/Requires.private: libpcre/d' $EMULATOR_SYSROOT/usr/lib/pkgconfig/glib-2.0.pc \
    && sed -i '/Libs.private: -pthread  -lpcre/d' $EMULATOR_SYSROOT/usr/lib/pkgconfig/glib-2.0.pc \
    && sed -i '/Requires.private: libpcre/d' $DEVICE_SYSROOT/usr/lib/pkgconfig/glib-2.0.pc \
    && sed -i '/Libs.private: -pthread  -lpcre/d' $DEVICE_SYSROOT/usr/lib/pkgconfig/glib-2.0.pc

# Provide environment variable setting files for emulator and device
#   $ source ~/emulator.env
#   $ cmake...
COPY Toolchain.cmake emulator.env device.env /home/work/

# add dependency library
COPY emulator $EMULATOR_SYSROOT/
COPY device $DEVICE_SYSROOT/

RUN echo alias cmake=\"cmake -DCMAKE_TOOLCHAIN_FILE=/home/work/Toolchain.cmake\$" >> ~/.bashrc

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license TOOLS

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license Baseline-SDK

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license TV-SAMSUNG-Extension-Resources

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license TV-SAMSUNG-Extension-Tool

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license TV-SAMSUNG-Public

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license TV-SAMSUNG-Public-Emulator

RUN ./tizen-studio/package-manager/package-manager-cli.bin \
    install --accept-license TV-SAMSUNG-Public-WebAppDevelopment


ENTRYPOINT [ "/bin/bash" ]